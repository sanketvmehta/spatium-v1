[cassandra]
storage.backend = cassandra
storage.hostname = 
storage.keyspace = titan

[elasticsearch]
storage.index.search.backend = elasticsearch
storage.index.search.hostname = 
storage.index.search.client-only = true
storage.batch-loading = 
ids.block-size = 

[mysql]
mysql.user = user
mysql.passwd = pass
mysql.database = database_name
mysql.hostname = 

[titan-hadoop-cassandra]
# input graph parameters
titan.hadoop.input.format = com.thinkaurelius.titan.hadoop.formats.cassandra.TitanCassandraInputFormat
titan.hadoop.input.conf.storage.backend = cassandra
titan.hadoop.input.conf.storage.hostname = 
titan.hadoop.input.conf.storage.port = 
titan.hadoop.input.conf.storage.cassandra.keyspace = titan
cassandra.input.partitioner.class = org.apache.cassandra.dht.Murmur3Partitioner
# cassandra.input.split.size=512
# cassandra.thrift.framed.size_mb=49
# cassandra.thrift.message.max_size_mb=50

# output data (graph or statistic) parameters
titan.hadoop.output.format=com.thinkaurelius.titan.hadoop.formats.cassandra.TitanCassandraOutputFormat
titan.hadoop.output.conf.storage.backend= cassandra
titan.hadoop.output.conf.storage.hostname= 
titan.hadoop.output.conf.storage.port= 
titan.hadoop.output.conf.storage.cassandra.keyspace = titan
titan.hadoop.output.conf.storage.batch-loading = true
titan.hadoop.output.infer-schema = true
# controls size of transaction
mapred.max.split.size = 5242880
# mapred.reduce.tasks=10
mapred.job.reuse.jvm.num.tasks = -1

titan.hadoop.sideeffect.format = org.apache.hadoop.mapreduce.lib.output.TextOutputFormat